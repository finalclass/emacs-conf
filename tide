** TIDE - typescrpit and javascript
DISABLED#+BEGIN_SRC emacs-lisp
    (defun setup-tide-mode ()
      (interactive)
      ;;  (setq tide-tsserver-process-environment '("TSS_LOG=-level verbose -file /tmp/tss.log"))
      (tide-setup)
      (if (file-exists-p (concat tide-project-root "node_modules/typescript/bin/tsserver"))
        (setq tide-tsserver-executable "node_modules/typescript/bin/tsserver"))
      (flycheck-mode +1)
      (setq flycheck-check-syntax-automatically '(save mode-enabled))
      (eldoc-mode +1)
      (setq eldoc-echo-area-prefer-doc-buffer 1)
      (setq eldoc-echo-area-display-truncation-message 1)
      (tide-hl-identifier-mode +1)
      ;; (setq tide-format-options '(:indentSize 4
      ;;                                         :tabSize 4
      ;;                                         :insertSpaceAfterFunctionKeywordForAnonymousFunctions t
      ;;                                         :placeOpenBraceOnNewLineForFunctions nil))
      ;;
      (local-set-key (kbd "C-c d") 'tide-documentation-at-point)
      (company-mode +1)
      (setq company-minimum-prefix-length 1))

  (use-package tide
      :ensure t
      :bind ("M-m r s" . tide-rename-symbol)
      :config
      (progn
        (company-mode +1)
        (add-hook 'before-save-hook 'tide-format-before-save)
        ;; aligns annotation to the right hand side

        (add-hook 'typescript-mode-hook #'setup-tide-mode)
        (add-to-list 'auto-mode-alist '("\\.ts\\'" . typescript-mode))
        ))
#+END_SRC
  +BEGIN_SRC emacs-lisp
    (defun setup-tide-mode ()
      (interactive)
      (tide-setup)
      (init-js-flycheck)
      (flycheck-mode +1)
      ;; (setq flycheck-checker 'javascript-eslint)
      (flycheck-add-next-checker 'typescript-tide 'javascript-eslint 'append)
      (setq flycheck-check-syntax-automatically '(save mode-enabled))
      (eldoc-mode +1)
      (eslintd-fix-mode +1)
      (tide-hl-identifier-mode +1)
      ;; company is an optional dependency. You have to
      ;; install it separately via package-install
      ;; `M-x package-install [ret] company`
      (company-mode +1))

    (use-package tide
      :ensure t
      :bind (("M-m r s" . tide-rename-symbol))
      :config
      (setq company-tooltip-align-annotations t)
      ;; (flycheck-add-next-checker 'javascript-eslint 'javascript-tide 'append)
      (add-hook 'before-save-hook 'tide-format-before-save)
      (add-hook 'typescript-mode-hook #'setup-tide-mode))

     ;; (defun typescript-beauty ()
     ;;   "Make TypeScript beautiful"
     ;;   (interactive)
     ;;   (when (eq major-mode 'typescript-mode)
     ;;     (shell-command-to-string
     ;;      (format (string-join
     ;;               '("js-beautify"
     ;;                 "--replace"
     ;;                 "--end-with-newline"
     ;;                 "--brace-style end-expand,preserve-inline"
     ;;                 "%s") " ")
     ;;              buffer-file-name))))

     ;; (add-hook 'after-save-hook #'typescript-beauty)
#+END_SRC
